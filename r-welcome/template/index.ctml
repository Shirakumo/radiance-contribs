<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8"/>
    <title>Welcome to Radiance</title>
    <link rel="stylesheet" type="text/css" @href="/static/welcome/welcome.css" />
  </head>
  <body>
    <header>
      <img @src="/static/radiance-inv.png" alt="Radiance" />
    </header>
    <main>
      <section id="welcome">
        <h2>Lights On!</h2>
        <p>
          Welcome to Radiance. Being able to see this page means that you successfully set things up and have a server running. Fantastic!
        </p>
        <p>
          Next you might want to try out one of the already built modules such as Reader. Simply <code>(ql:quickload :reader)</code> and then visit its page at <a @href="reader/" lquery='(text (uri-to-url "reader/" :representation :external))'></a>.
        </p>
      </section>
      <section id="request">
        <h2>Request Info</h2>
        <div class="props">
          <label>Subdomains</label><span lquery="(text (domains (uri request)))"></span>
          <label>Domain</label><span lquery="(text (domain request))"></span>
          <label>Port</label><span lquery="(text (port (uri request)))"></span>
          <label>Path</label><span lquery="(text (path (uri request)))"></span>
        </div>
      </section>
      <section id="system">
        <h2>System</h2>
        <div class="props">
          <label>Implementation</label><span lquery='(text (format NIL "~a ~a" (lisp-implementation-type) (lisp-implementation-version)))'></span>
          <label>Radiance</label><span lquery="(text (asdf:component-version (asdf:find-system :radiance)))"></span>
          <label>Quicklisp</label><span lquery='(text (ql-dist:version (ql-dist:dist "quicklisp")))'></span>
          <label>Uptime</label><span lquery="(text (format-relative-time (uptime)))"></span>
        </div>
      </section>
      <section id="modules">
        <h2>Loaded Modules</h2>
        <ul iterate="(sort (copy-list (modularize:list-modules)) #'string< :key #'package-name)">
          <c:unless test="(interface-p *)">
            <li>
              <h3 lquery="(text (module-name *))"></h3>
              <div class="props">
                <c:when test="(module-domain *)">
                  <label>Domain</label>
                  <a lquery='(text (module-domain *))' @href="{0}/ (module-domain *)"></a>
                </c:when>
                <c:when test="(module-pages *)">
                  <label>Pages</label>
                  <ul iterate="(module-pages *)">
                    <li lquery="(text (name *))"></li>
                  </ul>
                </c:when>
                <c:when test="(module-api-endpoints *)">
                  <label>API Endpoints</label>
                  <ul iterate="(module-api-endpoints *)">
                    <li lquery="(text *)"></li>
                  </ul>
                </c:when>
                <c:when test="(module-permissions *)">
                  <label>Permissions</label>
                  <ul iterate="(module-permissions *)">
                    <li lquery="(text *)"></li>
                  </ul>
                </c:when>
                <c:when test="(list-hooks *)">
                  <label>Hooks</label>
                  <ul iterate="(list-hooks *)">
                    <li lquery="(text *)"></li>
                  </ul>
                </c:when>
              </div>
            </li>
          </c:unless>
        </ul>
      </section>
    </main>
  </body>
</html>
